#!/usr/bin/env fish

function help_echo
 echo '
system package managment
(./)app [c, i, ir, p, pg, s, l, si, sc, upd, upg] argv[1]

    c: Clean package cache

    i: Install a package

    ir: Reinstall a package

    p: Purge a package(with configure files)

    pg: Purge a package(with its dependences and their configure files)/Autoremove

    s: Search a package

    l: Print a list of all installed packages

    si: Show the info of a package

    sc: Print a list of all using sources

    upd: Update the package database

    upg: Upgrade the system

aur helper plugin
(./)app aur [i, b, s, c]

    i: Build and install a package from aur

    b: Build a package from aur

    s: Search an aur package

    c: Clean build cache

ctpm[R] grab plugin
(./)app grab [upd, upg, l, s, *] argvs

    upd: Update the grabhub package database

    upg: Upgrade installed ctpm packages
        Note: Add -y/--no_confirm to confirm upgrade

    l: Print a list of all avaiable ctpm packages

    s: Search a ctpm package

    si: Show the info of a ctpm package

    sc: Print a list of all using sources

    *: Install a ctpm package from source
        Example: ctpkg grab ctutils
        Note1: * is the ctpm package that you wish to install
        Note2: Add -y/--no_confirm to confirm upgrade

ctpm package managment
(./)app ctpm [i/p/l] argvs

    i: Install a ctpm package
        Example: ctpkg ctpm i ctutils.ctpkg

    p: Purge a ctpm package
        Example: ctpkg ctpm p sys ctutils
        Note: Packages in ctpm are splited into two kinds of package, sys package installed for the whole system, user package only works for the user who install it

    l: Print a list of all installed ctpm packages

Misc
(./)app [v, h]

    v: Show Version

    h: Show this msg

Args
(./)app [-b/--ctbackend, -s/--ctsource] commands

    -b/--ctbackend: Force set a backend for ctpkg system package managment system
        Example: ctpkg -b apt i fish
        Note: Available{'apt', 'aptitude', 'pacman', 'apk', 'dnf', 'xbps', 'yum'}
    
    BIGNOTE: You can find these in configure file, which is located in /etc/centerlinux/conf.d/ctpkg.conf, and /etc/centerlinux/conf.d/ctpkg.source for ctpm sources
'
end

function logger-warn
  set_color magenta
  echo "$prefix ! $argv[1..-1]"
  set_color normal
end
function logger-error
  set_color red
  echo "$prefix x $argv[1..-1]"
  set_color normal
end
function logger-info-start
  set_color normal
  echo "$prefix + $argv[1..-1]"
  set_color normal
end
function logger-info-end
  set_color normal
  echo "$prefix - $argv[1..-1]"
  set_color normal
end
function logger-debug
  set_color yellow
  echo "$prefix ? $argv[1..-1]"
  set_color normal
end
function logger-success
  set_color green
  echo "$prefix âˆš $argv[1..-1]"
  set_color normal
end
function logger -d "a lib to print msg quickly"
switch $argv[1]
case 0
  logger-info-start $argv[2..-1]
case 1
  logger-info-end $argv[2..-1]
case 2
  logger-success $argv[2..-1]
case 3
  logger-debug $argv[2..-1]
case 4
  logger-warn $argv[2..-1]
case 5
  logger-error $argv[2..-1]
end
end

function checkdependence
set 34ylli8_deps_ok 1
for 34ylli8_deps in $argv
    if command -q -v $34ylli8_deps
    else
        set 34ylli8_deps_ok 0
        if test -z "$34ylli8_dep_lost"
            set 34ylli8_deps_lost "$34ylli8_deps $34ylli8_deps_lost"
        else
            set 34ylli8_deps_lost "$34ylli8_deps"
        end
    end
end
if test "$34ylli8_deps_ok" -eq 0
    set_color red
    echo "$prefix [error] "Please install "$34ylli8_deps_lost"to run this program""
    set_color normal
    exit
end
end
function checknetwork
  if curl -s -L $argv[1] | grep -q $argv[2]
  else
    set_color red
    echo "$prefix [error] [checknetwork] check failed - check your network connection"
    set_color normal
  end
end
function dir_exist
  if test -d $argv[1]
  else
    set_color red
    echo "$prefix [error] [checkdir] check failed - dir $argv[1] doesn't exist,going to make one"
    set_color normal
    mkdir $argv[1]
  end
end
function list_menu
ls $argv | sed '\~//~d'
end

function install_script
set installname $argv[1]
  set dir (pwd)
  set filename (status --current-filename)
  chmod +x $dir/$filename
  sudo cp $dir/$filename /usr/bin/$installname
  set_color green
  echo "$prefix Installed"
  set_color normal
end
function uninstall_script
set installname $argv[1]
  sudo rm /usr/bin/$installname
  set_color green
  echo "$prefix Removed"
  set_color normal
end

function configure
    sed -n "/$argv[1]=/"p "$argv[2]" | sed "s/$argv[1]=//g"
end
function search
    switch $package_manager
        case apt aptitude apk dnf yum
            $package_manager search $argv
        case pacman
            $package_manager -Ss $argv
        case xbps
            $package_manager-query -Rs $argv
        case '*'
            logger 5 "No support package manager detected"
    end
end

function purge
    switch $package_manager
        case apt
            sudo $package_manager purge $argv
            sudo $package_manager autoremove --purge
        case aptitude
            sudo $package_manager purge $argv
        case pacman
            sudo $package_manager -Rsn $argv
        case apk
            sudo $package_manager del $argv
        case dnf yum
            sudo $package_manager remove $argv
        case xbps
            sudo $package_manager-remove -R $argv
        case '*'
            logger 5 "No support package manager detected"
    end
end

function clean
    switch $package_manager
        case apt aptitude
            sudo $package_manager clean $argv
        case pacman
            sudo $package_manager -Scc $argv
        case apk
            logger 5 "No Such function in alpine apk"
        case dnf yum
            sudo $package_manager clean $argv
        case xbps
            sudo $package_manager-remove -O $argv
        case '*'
            logger 5 "No support package manager detected"
    end
end

function reinstall
    switch $package_manager
    case apt aptitude
        sudo $package_manager reinstall $argv
    case pacman
        sudo $package_manager -S $argv
    case apk
        sudo $package_manager dev $argv
        sudo $package_manager add $argv
    case dnf yum
        sudo $package_manager reinstall $argv
    case xbps
        sudo $package_manager-install -f $argv
    case '*'
        logger 5 "No support package manager detected"
end
end
function upgrade
    switch $package_manager
        case apt
            sudo $package_manager update
            sudo $package_manager upgrade $argv
            sudo $package_manager autoremove --purge -y
        case aptitude apk
            sudo $package_manager update $argv
            sudo $package_manager upgrade $argv
        case pacman
            sudo $package_manager -Syu $argv
        case dnf yum
            sudo $package_manager upgrade $argv
        case xbps
            sudo $package_manager-install -Su
        case '*'
            logger 5 "No support package manager detected"
    end
end

function show
    switch $package_manager
        case apt aptitude
            $package_manager show $argv
        case pacman
            $package_manager -Si $argv
        case apk dnf yum
            $package_manager info $argv
        case xbps
            $package_manager-query -RS $argv
        case '*'
            logger 5 "No support package manager detected"
    end
end

function user_list
    if ls -1qA ~/.ctpm/package_info/ | grep -q .
        set_color red
        echo ">Installed-UserLevel<"
        set_color normal
        cd ~/.ctpm/package_info/
        list_menu *.info | sed 's/.info//g'
    else
        set_color red
        echo ">Installed-UserLevel<"
        set_color normal
    end
end

function user_install
    logger 0 "-> Installing $package_name ver:$package_ver pakver:$package_relver as user level"
    cat src/file_list | tee ~/.ctpm/package_info/$package_name >/dev/null
    echo package_name=$package_name | tee ~/.ctpm/package_info/$package_name.info >/dev/null
    echo package_ver=$package_ver | tee -a ~/.ctpm/package_info/$package_name.info >/dev/null
    echo package_relver=$package_relver | tee -a ~/.ctpm/package_info/$package_name.info >/dev/null
    echo package_packager=$package_packager | tee -a ~/.ctpm/package_info/$package_name.info >/dev/null
    echo package_level=$package_level | tee -a ~/.ctpm/package_info/$package_name.info >/dev/null
    echo package_unis=$package_unis | tee -a ~/.ctpm/package_info/$package_name.info >/dev/null
    if [ -s src/unis_hooks ]
        cat src/unis_hooks | tee ~/.ctpm/package_info/$package_name.unis >/dev/null
        chmod +x ~/.ctpm/package_info/$package_name.unis
    end
    for src_file in (cat src/file_list)
        set src_file_dirname (dirname $src_file)
        if test -d $src_file_dirname
        else
            mkdir -p ~/.$src_file_dirname &>/dev/null
        end
        if test -e ~/.$src_file
            rm -rf ~/.$src_file
        end
        mv -f src$src_file ~/.$src_file &>/dev/null
    end
    if [ -s hooks ]
        logger 0 "-> Running install hooks for $package_name"
        chmod +x hooks
        ./hooks
    end
end

function user_purge
    for package_ctpm in $argv
        set package_unis (sed -n '/package_unis=/'p ~/.ctpm/package_info/$package_ctpm.info | sed 's/package_unis=//g')
        if test -e ~/.ctpm/package_info/$package_ctpm
            for src_file in (cat ~/.ctpm/package_info/$package_ctpm)
                rm -rf ~/$src_file
            end
            if [ "$package_unis" = "1" ]
                if test -e ~/.ctpm/package_info/$package_ctpm.unis
                    ~/.ctpm/package_info/$package_ctpm.unis
                end
            end
            rm ~/.ctpm/package_info/$package_ctpm
            rm ~/.ctpm/package_info/$package_ctpm.info
            if test -e ~/.ctpm/package_info/$package_ctpm.unis
            rm ~/.ctpm/package_info/$package_ctpm.unis
            end
            logger 2 "purged package:$package_ctpm"
        else
            logger 5 "Info file of package:$package_ctpm has been lost, abort"
        end
    end
end

function ctpm_show
    for package_ctpm in $argv[1..-1]
        if test -e /var/lib/ctpm/package_info/$package_ctpm.info
            set package_name (sed -n '/package_name=/'p /var/lib/ctpm/package_info/$package_ctpm.info | sed 's/package_name=//g')
            set package_ver (sed -n '/package_ver=/'p /var/lib/ctpm/package_info/$package_ctpm.info | sed 's/package_ver=//g')
            set package_relver (sed -n '/package_relver=/'p /var/lib/ctpm/package_info/$package_ctpm.info | sed 's/package_relver=//g')
            set package_packager (sed -n '/package_packager=/'p /var/lib/ctpm/package_info/$package_ctpm.info | sed 's/package_packager=//g')
            set package_level (sed -n '/package_level=/'p /var/lib/ctpm/package_info/$package_ctpm.info | sed 's/package_level=//g')
            set package_unis (sed -n '/package_unis=/'p /var/lib/ctpm/package_info/$package_ctpm.info | sed 's/package_unis=//g')
            echo "-----------"
            echo "package name: $package_name"
            echo "package software ver: $package_ver"
            echo "package relver:$package_relver"
            echo "package packager:$package_packager"
            echo "package level: $package_level"
            echo "package unis hook: $package_unis"
            echo "-----------"
        end
        if test -e ~/.ctpm/package_info/$package_ctpm.info
            set package_name (sed -n '/package_name=/'p ~/.ctpm/package_info/$package_ctpm.info | sed 's/package_name=//g')
            set package_ver (sed -n '/package_ver=/'p ~/.ctpm/package_info/$package_ctpm.info | sed 's/package_ver=//g')
            set package_relver (sed -n '/package_relver=/'p ~/.ctpm/package_info/$package_ctpm.info | sed 's/package_relver=//g')
            set package_packager (sed -n '/package_packager=/'p ~/.ctpm/package_info/$package_ctpm.info | sed 's/package_packager=//g')
            set package_level (sed -n '/package_level=/'p ~/.ctpm/package_info/$package_ctpm.info | sed 's/package_level=//g')
            set package_unis (sed -n '/package_unis=/'p ~/.ctpm/package_info/$package_ctpm.info | sed 's/package_unis=//g')
            echo "-----------"
            echo "package name: $package_name"
            echo "package software ver: $package_ver"
            echo "package relver:$package_relver"
            echo "package packager:$package_packager"
            echo "package level: $package_level"
            echo "package unis hook: $package_unis"
            echo "-----------"
        end
    end
end

function extract
    set -lx recudir (pwd)
    set -lx package_ctpm
    if test -d /tmp/ctpm
    else
        mkdir /tmp/ctpm
    end
    if [ -w /tmp/ctpm ]
    else
        logger 5 '/tmp/ctpm is not accessable to this user,abort'
    end
    for package_ctpm in $argv
        if test -e $package_ctpm
        else
            logger 5 "$package_ctpm not found,abort"
            exit
        end
        tar xf $package_ctpm -C /tmp/ctpm
        cd /tmp/ctpm
        logger 0 '-> Package extracted'
        set -lx package_name (sed -n '/package_name=/'p ctpm_pkg_info | sed 's/package_name=//g')
        set -lx package_ver (sed -n '/package_ver=/'p ctpm_pkg_info | sed 's/package_ver=//g')
        set -lx package_relver (sed -n '/package_relver=/'p ctpm_pkg_info | sed 's/package_relver=//g')
        set -lx package_packager (sed -n '/package_packager=/'p ctpm_pkg_info | sed 's/package_packager=//g')
        set -lx package_level (sed -n '/package_level=/'p ctpm_pkg_info | sed 's/package_level=//g')
        set -lx package_unis (sed -n '/package_unis=/'p ctpm_pkg_info | sed 's/package_unis=//g')
        switch $package_level
            case user
                user_install
            case sys
                sys_install
            case h '*'
                logger 5 "Unknown package level,abort"
                exit
        end
        cd $recudir
        rm -rf ctpm
        logger 2 "Processed"
    end
end

function sys_install
    logger 0 "-> Installing $package_name ver:$package_ver pakver:$package_relver as sys level"
    cat src/file_list | sudo tee /var/lib/ctpm/package_info/$package_name >/dev/null
    echo package_name=$package_name | sudo tee /var/lib/ctpm/package_info/$package_name.info >/dev/null
    echo package_ver=$package_ver | sudo tee -a /var/lib/ctpm/package_info/$package_name.info >/dev/null
    echo package_relver=$package_relver | sudo tee -a /var/lib/ctpm/package_info/$package_name.info >/dev/null
    echo package_packager=$package_packager | sudo tee -a /var/lib/ctpm/package_info/$package_name.info >/dev/null
    echo package_level=$package_level | sudo tee -a /var/lib/ctpm/package_info/$package_name.info >/dev/null
    echo package_unis=$package_unis | sudo tee -a /var/lib/ctpm/package_info/$package_name.info >/dev/null
    if [ -s src/unis_hooks ]
        cat src/unis_hooks | sudo tee /var/lib/ctpm/package_info/$package_name.unis >/dev/null
        sudo chmod +x /var/lib/ctpm/package_info/$package_name.unis
    end
    for src_file in (cat src/file_list)
        set src_file_dirname (dirname $src_file)
        if test -d "$src_file_dirname"
        else
            sudo mkdir -p "$src_file_dirname" &>/dev/null
        end
        if test -e $src_file
            sudo rm -rf $src_file
        end
        sudo mv -f src$src_file $src_file &>/dev/null
    end
    if [ -s hooks ]
        logger 0 "-> Running install hooks for $package_name"
        sudo chmod +x hooks
        sudo ./hooks
    end
end

function sys_list
    if ls -1qA /var/lib/ctpm/package_info/ | grep -q .
        set_color red
        echo ">Installed-SysLevel<"
        set_color normal
        cd /var/lib/ctpm/package_info/
        list_menu *.info | sed 's/.info//g'
    else
        set_color red
        echo ">Installed-SysLevel<"
        set_color normal
    end
end

function sys_purge
    for package_ctpm in $argv
        set package_unis (sed -n '/package_unis=/'p /var/lib/ctpm/package_info/$package_ctpm.info | sed 's/package_unis=//g')
        if test -e /var/lib/ctpm/package_info/$package_ctpm
            for src_file in (cat /var/lib/ctpm/package_info/$package_ctpm)
                sudo rm -rf $src_file
            end
            if [ "$package_unis" = 1 ]
                if test -e /var/lib/ctpm/package_info/$package_ctpm.unis
                    sudo /var/lib/ctpm/package_info/$package_ctpm.unis
                end
            end
            sudo rm /var/lib/ctpm/package_info/$package_ctpm
            sudo rm /var/lib/ctpm/package_info/$package_ctpm.info
            if test -d /var/lib/ctpm/package_info/$package_ctpm.unis
                sudo rm /var/lib/ctpm/package_info/$package_ctpm.unis
            end
            logger 2 "Purged package:$package_ctpm"
        else
            logger 5 "Info file of package:$package_ctpm has been lost, abort"
        end
    end
end

function autoremove
    switch $package_manager
        case apt
            sudo $package_manager autoremove --purge $argv
        case aptitude
            sudo $package_manager -o Aptitude::Delete-Unused=1 install $argv
        case pacman
            sudo $package_manager -Rsnc (pacman -Qtdq) $argv
        case apk
            logger 5 'No Such function in alpine apk'
        case dnf yum
            sudo $package_manager autoremove $argv
        case xbps
            sudo $package_manager-remove -Oo $argv
        case '*'
            logger 5 "No support package manager detected"
    end
end

function update
    switch $package_manager
        case apt aptitude
            sudo $package_manager update $argv
        case pacman
            sudo $package_manager -Sy $argv
        case apk
            sudo $package_manager update $argv
        case dnf yum
            sudo $package_manager check-update $argv
        case xbps
            sudo $package_manager-install -S $argv
        case '*'
            logger 5 "No support package manager detected"
    end
end

function source_list
    switch $package_manager
        case apt aptitude
            cat /etc/apt/sources.list | grep --color=never deb
            cat /etc/apt/sources.list.d/* | grep --color=never deb
        case pacman
            cat /etc/pacman.d/mirrorlist | grep --color=never "Server ="
            cat /etc/pacman.conf | grep --color=never "Server =" 
        case apk
            cat /etc/apk/repositories $argv
        case dnf yum
            $package_manager repolist $argv
        case xbps
            $package_manager-query -L $argv
        case '*'
            logger 5 "No support package manager detected"
    end
end

function list
    switch $package_manager
        case apt aptitude
            apt list --installed $argv
        case pacman
            $package_manager -Qq $argv
        case apk
            $package_manager list $argv
        case yum dnf
            rpm -qa
        case xbps
            $package_manager-query -l $argv
        case '*'
            logger 5 "No support package manager detected"
    end
end

function install
    switch $package_manager
        case apt aptitude
            sudo $package_manager install $argv
        case pacman
            sudo $package_manager -S $argv
        case apk
            sudo $package_manager add $argv
        case dnf yum
            sudo $package_manager install $argv
        case xbps
            sudo $package_manager-install $argv
        case '*'
            logger 5 "No support package manager detected"
    end
end

function grab
    argparse -i -n $prefix y/no_confirm -- $argv
    set counter_source 0
    for source in (cat /etc/centerlinux/conf.d/ctpkg.source)
        set counter_source (math "$counter_source+1")
        set ctpm_source[$counter_source] (echo $source | awk -F "=" '{print $1}')
        set ctpm_source_link[$counter_source] (echo $source | awk -F "=" '{print $2}')
    end
    switch $argv[1]
        case upd
            logger 0 "Cleaning ctpm[R] package database cache"
            if echo | sudo tee /var/lib/ctpm/world &>/dev/null
                logger 1 "ctpm[R] package database cache purged"
            else
                logger 5 "Failed to clean ctpm[R] package database cache, abort"
                exit
            end
            logger 0 "Refreshing ctpm[R] package database"
            if for target_source in (seq 1 $counter_source)
                    logger 0 "Refreshing source $ctpm_source[$target_source] from $ctpm_source_link[$target_source]"
                    curl --progress-bar -L "$ctpm_source_link[$target_source]/list" | sed -e "s/^/$ctpm_source[$target_source]\//" | sudo tee -a /var/lib/ctpm/world &>/dev/null
                end
                logger 2 "ctpm[R] database is up to date"
            else
                logger 5 "Critical error when trying to update ctpm[R] database, abort"
                exit
            end
        case upg
            set counter_upg 0
            grab upd
            if ls -1qA ~/.ctpm/package_info/ | grep -q .
                for ctpm_package in (cd ~/.ctpm/package_info/ && list_menu *.info | sed 's/.info//g')
                    set package_relver (sed -n '/package_relver=/'p ~/.ctpm/package_info/$ctpm_package.info | sed 's/package_relver=//g')
                    if grep -qsF "$ctpm_package=" /var/lib/ctpm/world
                        set package_repo (cat /var/lib/ctpm/world | grep -F "$ctpm_package=" | awk -F "/" '{print $1}')
                        set package_relver_repo (cat /var/lib/ctpm/world | awk -F "/" '{print $2}' | sed -n "/$ctpm_package=/"p | awk -F "=" '{print $2}')
                        if test $package_relver_repo -gt $package_relver
                            set counter_upg (math $counter_upg+1)
                            set upgrade_package[$counter_upg] "$package_repo/$ctpm_package"
                        end
                    else
                        logger 4 "Package: $ctpm_package is not found in the source, ignore it"
                    end
                end
            end
            if ls -1qA /var/lib/ctpm/package_info/ | grep -q .
                for ctpm_package in (cd /var/lib/ctpm/package_info/ && list_menu *.info | sed 's/.info//g')
                    set package_relver (sed -n '/package_relver=/'p /var/lib/ctpm/package_info/$ctpm_package.info | sed 's/package_relver=//g')
                    if grep -qsF "$ctpm_package=" /var/lib/ctpm/world
                        set package_repo (cat /var/lib/ctpm/world | grep -F "$ctpm_package=" | awk -F "/" '{print $1}')
                        set package_relver_repo (cat /var/lib/ctpm/world | awk -F "/" '{print $2}' | sed -n "/$ctpm_package=/"p | awk -F "=" '{print $2}')
                        if test $package_relver_repo -gt $package_relver
                            set counter_upg (math $counter_upg+1)
                            set upgrade_package[$counter_upg] "$package_repo/$ctpm_package"
                        end
                    else
                        logger 4 "Package: $ctpm_package is not found in the source, ignore it"
                    end
                end
            end
            if test "$upgrade_package" = ""
                logger 2 "Your system is up to date"
            else
                if set -q _flag_no_confirm
                    grab $upgrade_package -y
                else
                    grab $upgrade_package
                end
            end
        case l
            echo "* Listing all package available in cloud repo..."
            cat /var/lib/ctpm/world
        case s
            echo "* Found in source:"
            for ctpm_package in $argv[2..-1]
                grep $ctpm_package /var/lib/ctpm/world
            end
        case sc
            cat /etc/centerlinux/conf.d/ctpkg.source
        case '*'
            logger 0 "Checking for packages..."
            set counter_grab 0
            set counter_grab_ignore 0
            for ctpm_package in $argv
                if grep -qsF "$ctpm_package=" /var/lib/ctpm/world
                    set counter_grab (math $counter_grab+1)
                    set grab_package[$counter_grab] $ctpm_package
                else
                    set counter_grab_ignore (math $counter_grab+1)
                    set grab_ignore[$counter_grab_ignore] $ctpm_package
                end
            end
            if test "$grab_package" = ""
                logger 5 "Nothing to grab, abort"
                logger 4 "The following packages won't be installed, cuz they're not available in any cloudrepo"
                logger 0 -----------
                logger 0 "$grab_ignore"
                logger 0 -----------
            else
                logger 4 "The following packages is available,grab them all?[y/N]"
                logger 0 -----------
                logger 0 "$grab_package"
                logger 0 -----------
                if test "$grab_ignore" = ""
                else
                    logger 4 "The following packages won't be installed, cuz they're not available in any cloudrepo"
                    logger 0 -----------
                    logger 0 "$grab_ignore"
                    logger 0 -----------
                end
                if set -q _flag_no_confirm
                else
                    read -n1 -P "$prefix >>> " grab_confirm
                    switch $grab_confirm
                        case y Y
                        case n N '*'
                            logger 1 "Aborted by user"
                            exit
                    end
                end
            end
            for ctpm_package in $grab_package
                if echo $ctpm_package | grep -qs /
                    set target_source (echo $ctpm_package | awk -F "/" '{print $1}')
                    set ctpm_package (echo $ctpm_package | awk -F "/" '{print $2}')
                else
                    set target_source (grep -F "$ctpm_package=" /var/lib/ctpm/world | awk -F "/" '{print $1}')
                end
                for sources in (seq 1 $counter_source)
                    if test "$ctpm_source[$sources]" = "$target_source"
                        set target_source_link $ctpm_source_link[$sources]
                    end
                end
                logger 0 "Grabbing $ctpm_package"
                if curl --progress-bar -L -o /tmp/$ctpm_package.ctpkg $target_source_link/$ctpm_package.ctpkg
                    if file /tmp/$ctpm_package.ctpkg | grep -q 'gzip compressed'
                    else
                        logger 4 "The package downloaded for $ctpm_package seems not a ctpkg file,remove and skip it,please try to download again and check the package name you typed"
                        rm /tmp/$ctpm_package.ctpkg
                    end
                    logger 1 "Package:$ctpm_package Downloaded,installing..."
                    cd /tmp
                    extract $ctpm_package.ctpkg
                    rm $ctpm_package.ctpkg
                else
                    logger 4 "Package:$ctpm_package failed to download,ignored"
                end
            end
    end
end

function aur-search
    logger 0 "Querying aur..."
    for keywords in $argv
        curl -sL "https://aur.archlinux.org/rpc/?v=5&type=search&arg=$keywords" | jq -r '.results as $data | $data[] | "\n\u001b[32maur-pacman/"+.Name+" "+.Version+"\u001b[32m","\u001b[0mDescription: "+.Description'
    end
end

function aur-install
    set recudir (pwd)
    dir_exist ~/.ctpm/aur
    cd ~/.ctpm/aur
    function aur-get-pkgbuild
        logger 0 "Getting $argv PKGBUILD file"
        if test (curl --progress-bar -sL "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=$argv" | head -n1) != "<!DOCTYPE html>"
            logger 1 "Check passed,getting build files"
        else
            logger 5 "Unable to get the PKGBUILD file of "$argv", please check your package name and network connection, abort"
            exit
        end
        if git clone "https://aur.archlinux.org/$argv"
            logger 1 "Build files downloaded,please review it,then press ctrl+x to continue"
            sleep 1
        else
            logger 5 "Unable to get build files of "$argv", please check your package name and network connection, abort"
            exit
        end
    end
    for target in $argv
        if test -e ~/.ctpm/aur/$target/PKGBUILD
            logger 3 'Detected an existed BUILDPKG file, would you want to remove it and build it from aur?[y/N]'
            read -n1 -P "$prefix >>> " _delete_var_
            switch $_delete_var_
                case Y y
                    rm -rf $target
                    aur-get-pkgbuild "$target"
                case N n '*'
            end
        else
            aur-get-pkgbuild "$target"
        end
        cd $target
        command nano PKGBUILD
        if test "$aur_build_only" = true
            if makepkg -s
                logger 2 "Store at ~/.ctpm/aur/$target/"
            else
                logger 5 "Package $target failed to build"
            end
        else
            makepkg -si
        end
        cd ..
    end
    cd $recudir
end

function ctconfig_init
    if test -e /etc/centerlinux/conf.d/ctpkg.conf
    else
        set_color red
        echo "$prefix Detected First Launching,We need your password to create the config file"
        set_color normal
        if test -d /etc/centerlinux/conf.d/
        else
            sudo mkdir -p /etc/centerlinux/conf.d/
        end
        echo "backend=" | sudo tee -a /etc/centerlinux/conf.d/ctpkg.conf &>/dev/null
    end
    if test -e /etc/centerlinux/conf.d/ctpkg.source
    else
        echo "main=https://ctpm.ruzhtw.top/" | sudo tee /etc/centerlinux/conf.d/ctpkg.source &>/dev/null
    end
    if test -d /var/lib/ctpm/package_info
    else
        logger 4 'Creating ctpm package info database'
        sudo mkdir -p /var/lib/ctpm/package_info
    end
    if test -d ~/.ctpm/package_info
    else
        logger 4 'Creating ctpm user package info database'
        mkdir -p ~/.ctpm/package_info
    end
end

function detectos
    #debian
    if test -e /etc/debian_version
        if command -q aptitude
            set -g package_manager aptitude
        else
            set -g package_manager apt
        end
    end
    #archlinux
    if test -e /etc/arch-release
        if command -q pacman
            set -g package_manager pacman
        end
    end
    #alpine
    if test -e /etc/alpine-release
        if command -q apk
            set -g package_manager apk
        end
    end
    #fedora
    if test -e /etc/fedora-release
        set -g package_manager dnf
    end
    #centos
    if test -e /etc/centos-release
        set -g package_manager yum
    end
    #voidlinux
    if command -q xbps-install
        set -g package_manager xbps
    end
end

echo Build_Time_UTC=2022-06-28_04:10:16
set -lx prefix [ctpkg]
checkdependence file curl tar rm mv
ctconfig_init
set -g package_manager (sed -n '/backend=/'p /etc/centerlinux/conf.d/ctpkg.conf | sed 's/backend=//g')
if [ "$package_manager" = "" ]
    detectos
end
argparse -i -n $prefix 'b/ctbackend=' -- $argv
if set -q _flag_ctbackend
    set -g package_manager $_flag_ctbackend
end
logger 0 "Set backend as $package_manager"
switch $argv[1]
    case c
        clean $argv[2..-1]
    case grab
        logger 0 "Loading grab-ctpm(plugin)"
        grab $argv[2..-1]
    case i
        install $argv[2..-1]
    case ir
        reinstall $argv[2..-1]
    case p
        purge $argv[2..-1]
    case pg
        autoremove $argv[2..-1]
    case s
        search $argv[2..-1]
    case l
        list $argv[2..-1]
    case si
        show $argv[2..-1]
    case sc
        source_list $argv[2..-1]
    case upd
        update $argv[2..-1]
    case upg
        upgrade $argv[2..-1]
    case aur
        logger 0 "Loading aur-pacman(plugin)..."
        checkdependence jq git
        switch $argv[2]
            case i
                aur-install $argv[3..-1]
            case b
                set aur_build_only true
                aur-install $argv[3..-1]
            case s
                aur-search $argv[3..-1]
            case c
                logger 3 'Please confirm that you really want to clean aur build cache[y/N]'
                read -n1 -P "$prefix >>> " _delete_var_
                switch $_delete_var_
                    case Y y
                        rm -rf ~/.ctpm/aur/*
                    case N n '*'
                        logger 1 Abort
                end
        end
    case ctpm
        logger 0 "Set backend as ctpm"
        switch $argv[2]
            case i
                extract $argv[3..-1]
            case l
                switch $argv[3]
                    case sys
                        sys_list
                    case user
                        user_list
                    case '*'
                        sys_list
                        user_list
                end
            case p
                switch $argv[3]
                    case sys
                        sys_purge $argv[4..-1]
                    case user
                        user_purge $argv[4..-1]
                    case h help '*'
                        help_echo
                end
            case si
                ctpm_show $argv[3..-1]
            case h help '*'
                help_echo
        end
    case install
        install_script ctpkg
    case uninstall
        uninstall_script ctpkg
    case v version
        logger 1 "+ CenterLinux Package Manager Hairpin@build5 | TeaHouseLab at ruzhtw.top"
    case h help '*'
        help_echo
end
set -e package_manager
